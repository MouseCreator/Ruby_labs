#USER CONTROLLER

class UsersController < ApplicationController
  skip_before_action :verify_authenticity_token

  def new
    @user = User.new
  end

  def create
    @user = User.new(user_params)
    if @user.save
      session[:user_id] = @user.id
      redirect_to '/'
    else
      redirect_to '/signup'
    end
  end
  private
    def user_params
      params.require(:user)
      .permit(:first_name, :last_name,
      :email, :password)
    end
end

#APPLICATION CONTROLLER

class ApplicationController < ActionController::Base
  helper_method :current_user

  def require_user
    redirect_to '/login' unless current_user
  end

  def current_user
    @current_user ||= User.find(session[:user_id]) if session[:user_id]
  end

  def require_author
    redirect_to '/' unless current_user.author?
  end
end


#SESSIONS CONTROLLER

class SessionsController < ApplicationController
  skip_before_action :verify_authenticity_token
  def new
  end

  def create
    @user = User.find_by_email(params[:session][:email])
    if @user && @user.authenticate(params[:session][:password])
      session[:user_id] = @user.id
      redirect_to '/'
    else
      redirect_to '/login'
    end
  end

  def destroy
    session[:user_id] = nil
    redirect_to '/'
  end
end


#Divan Riga riga@same.com platium12

#SESSION HTML

<div class="login">
  <div class="container">

    <%= form_for(:session, url:login_path) do |f| %>
      <%= f.email_field :email, :placeholder => "Email" %>
      <%= f.password_field :password, :placeholder => "Password" %>
      <%= f.submit "Log in", class: "btn-submit" %>
    <% end %>
  </div>
</div>

#USER HTML
<div class="signup">
  <div class="container">
    
    <%= form_for(@user) do |f| %>
      <div class="field">
      <%= f.label :first_name %>
      <%= f.text_field :first_name %>
      </div>
      <div class="field">
      <%= f.label :last_name %>
      <%= f.text_field :last_name %>
      </div>
      <div class="field">
      <%= f.label :email %>
      <%= f.text_field :email %>
      </div>
      <div class="field">
      <%= f.label :password %>
      <%= f.text_field :password %>
      </div>
      <div class="actions">
      <%= f.submit "Create", class: "btn-submit" %>
      </div>
    <% end %>
  </div>
</div>


#ROUTES
Rails.application.routes.draw do
  # Define your application routes per the DSL in https://guides.rubyonrails.org/routing.html

  resources :articles
  resources :users

  get '/signup', to: 'users#new'
  get '/login', to: "sessions#new"
  post '/login', to: "sessions#create"
  root 'articles#index'

  # Defines the root path route ("/")
  # root "articles#index"
end

#APPLICATION HMTL
<!DOCTYPE html>
<html>
  <head>
    <title>Newstand</title>
    <link href='http://fonts.googleapis.com/css?family=Roboto+Slab:300,700,100,400' rel='stylesheet' type='text/css'>
    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
    <%= csrf_meta_tags %>
  </head>
  <body>

    <div class="header">
      <div class="container">
        <%= link_to(root_path) do %>
          <h1><span class="dark">n</span>ewstand</h1>
        <% end %>

        <div class="nav">
          
          <% if current_user %>
          <ul>
            <li> <%= current_user.email %> </li>
            <li> <%= button_to "Log out", logout_path, method: "delete", class: 'btn btn-small' %> </li>
          </ul>
          <% else %>
            <ul>
              <li> <%= link_to "Login", '/login' %> </li>
              <li> <%= link_to "Signup", '/signup' %> </li>
            </ul>
          <% end %> 
         

        </div>
      </div>
    </div>


    <%= yield %>

  </body>
</html>

#ARTICLES

class ArticlesController < ApplicationController
  before_action :require_user, except: [:index]
  def index
    @articles = Article.all
  end
 
  def show
    @article = Article.find(params[:id])
  end
 
  def new
    @article = Article.new
  end
 
  def create
    @article = Article.new(article_params)
 
    if @article.save
      redirect_to @article
    else
      render 'new'
    end
  end
 
  def edit
    @article = Article.find(params[:id])
  end

  def update
    @article = Article.find(params[:id])
 
    if @article.update(article_params)
      redirect_to @article
    else
      render 'edit'
    end
  end
 
  def destroy
    @article = Article.find(params[:id])
    @article.destroy
 
    redirect_to articles_path
  end
 
  private
    def article_params
      params.require(:article).permit(:title, :author, :body)
    end
end

